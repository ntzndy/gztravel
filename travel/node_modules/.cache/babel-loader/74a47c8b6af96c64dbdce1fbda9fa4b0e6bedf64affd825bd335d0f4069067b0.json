{"ast":null,"code":"exports.L = {\n  bit: 1\n};\nexports.M = {\n  bit: 0\n};\nexports.Q = {\n  bit: 3\n};\nexports.H = {\n  bit: 2\n};\nfunction fromString(string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string');\n  }\n  const lcStr = string.toLowerCase();\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L;\n    case 'm':\n    case 'medium':\n      return exports.M;\n    case 'q':\n    case 'quartile':\n      return exports.Q;\n    case 'h':\n    case 'high':\n      return exports.H;\n    default:\n      throw new Error('Unknown EC Level: ' + string);\n  }\n}\nexports.isValid = function isValid(level) {\n  return level && typeof level.bit !== 'undefined' && level.bit >= 0 && level.bit < 4;\n};\nexports.from = function from(value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value;\n  }\n  try {\n    return fromString(value);\n  } catch (e) {\n    return defaultValue;\n  }\n};","map":{"version":3,"names":["exports","L","bit","M","Q","H","fromString","string","Error","lcStr","toLowerCase","isValid","level","from","value","defaultValue","e"],"sources":["C:/Users/zcy/Desktop/code/gztravel/travel/node_modules/qrcode/lib/core/error-correction-level.js"],"sourcesContent":["exports.L = { bit: 1 }\r\nexports.M = { bit: 0 }\r\nexports.Q = { bit: 3 }\r\nexports.H = { bit: 2 }\r\n\r\nfunction fromString (string) {\r\n  if (typeof string !== 'string') {\r\n    throw new Error('Param is not a string')\r\n  }\r\n\r\n  const lcStr = string.toLowerCase()\r\n\r\n  switch (lcStr) {\r\n    case 'l':\r\n    case 'low':\r\n      return exports.L\r\n\r\n    case 'm':\r\n    case 'medium':\r\n      return exports.M\r\n\r\n    case 'q':\r\n    case 'quartile':\r\n      return exports.Q\r\n\r\n    case 'h':\r\n    case 'high':\r\n      return exports.H\r\n\r\n    default:\r\n      throw new Error('Unknown EC Level: ' + string)\r\n  }\r\n}\r\n\r\nexports.isValid = function isValid (level) {\r\n  return level && typeof level.bit !== 'undefined' &&\r\n    level.bit >= 0 && level.bit < 4\r\n}\r\n\r\nexports.from = function from (value, defaultValue) {\r\n  if (exports.isValid(value)) {\r\n    return value\r\n  }\r\n\r\n  try {\r\n    return fromString(value)\r\n  } catch (e) {\r\n    return defaultValue\r\n  }\r\n}\r\n"],"mappings":"AAAAA,OAAO,CAACC,CAAC,GAAG;EAAEC,GAAG,EAAE;AAAE,CAAC;AACtBF,OAAO,CAACG,CAAC,GAAG;EAAED,GAAG,EAAE;AAAE,CAAC;AACtBF,OAAO,CAACI,CAAC,GAAG;EAAEF,GAAG,EAAE;AAAE,CAAC;AACtBF,OAAO,CAACK,CAAC,GAAG;EAAEH,GAAG,EAAE;AAAE,CAAC;AAEtB,SAASI,UAAUA,CAAEC,MAAM,EAAE;EAC3B,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAC9B,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EAEA,MAAMC,KAAK,GAAGF,MAAM,CAACG,WAAW,CAAC,CAAC;EAElC,QAAQD,KAAK;IACX,KAAK,GAAG;IACR,KAAK,KAAK;MACR,OAAOT,OAAO,CAACC,CAAC;IAElB,KAAK,GAAG;IACR,KAAK,QAAQ;MACX,OAAOD,OAAO,CAACG,CAAC;IAElB,KAAK,GAAG;IACR,KAAK,UAAU;MACb,OAAOH,OAAO,CAACI,CAAC;IAElB,KAAK,GAAG;IACR,KAAK,MAAM;MACT,OAAOJ,OAAO,CAACK,CAAC;IAElB;MACE,MAAM,IAAIG,KAAK,CAAC,oBAAoB,GAAGD,MAAM,CAAC;EAClD;AACF;AAEAP,OAAO,CAACW,OAAO,GAAG,SAASA,OAAOA,CAAEC,KAAK,EAAE;EACzC,OAAOA,KAAK,IAAI,OAAOA,KAAK,CAACV,GAAG,KAAK,WAAW,IAC9CU,KAAK,CAACV,GAAG,IAAI,CAAC,IAAIU,KAAK,CAACV,GAAG,GAAG,CAAC;AACnC,CAAC;AAEDF,OAAO,CAACa,IAAI,GAAG,SAASA,IAAIA,CAAEC,KAAK,EAAEC,YAAY,EAAE;EACjD,IAAIf,OAAO,CAACW,OAAO,CAACG,KAAK,CAAC,EAAE;IAC1B,OAAOA,KAAK;EACd;EAEA,IAAI;IACF,OAAOR,UAAU,CAACQ,KAAK,CAAC;EAC1B,CAAC,CAAC,OAAOE,CAAC,EAAE;IACV,OAAOD,YAAY;EACrB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}