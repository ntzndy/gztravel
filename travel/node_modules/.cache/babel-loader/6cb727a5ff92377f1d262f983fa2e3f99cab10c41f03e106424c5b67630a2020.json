{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zcy\\\\Desktop\\\\code\\\\gztravel\\\\travel\\\\src\\\\context\\\\LanguageContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { getTranslation } from '../utils/translations';\n\n// 创建语言上下文\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\n\n// 语言提供者组件\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s();\n  const [currentLanguage, setCurrentLanguage] = useState('zh');\n\n  // 切换语言函数\n  const changeLanguage = language => {\n    setCurrentLanguage(language);\n    localStorage.setItem('preferred-language', language);\n  };\n\n  // 获取翻译的便捷函数\n  const t = key => getTranslation(key, currentLanguage);\n\n  // 获取支持的语言列表\n  const getSupportedLanguages = () => [{\n    code: 'zh',\n    name: '中文',\n    flag: '🇨🇳'\n  }, {\n    code: 'en',\n    name: 'English',\n    flag: '🇺🇸'\n  }, {\n    code: 'ja',\n    name: '日本語',\n    flag: '🇯🇵'\n  }];\n  const value = {\n    currentLanguage,\n    changeLanguage,\n    t,\n    getSupportedLanguages\n  };\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n// 使用语言上下文的Hook\n_s(LanguageProvider, \"bRs5OQQmI8voe4Pg4u9obuM8cYE=\");\n_c = LanguageProvider;\nexport const useLanguage = () => {\n  _s2();\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};\n_s2(useLanguage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default LanguageContext;\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","getTranslation","jsxDEV","_jsxDEV","LanguageContext","LanguageProvider","children","_s","currentLanguage","setCurrentLanguage","changeLanguage","language","localStorage","setItem","t","key","getSupportedLanguages","code","name","flag","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useLanguage","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/zcy/Desktop/code/gztravel/travel/src/context/LanguageContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { getTranslation } from '../utils/translations';\r\n\r\n// 创建语言上下文\r\nconst LanguageContext = createContext();\r\n\r\n// 语言提供者组件\r\nexport const LanguageProvider = ({ children }) => {\r\n  const [currentLanguage, setCurrentLanguage] = useState('zh');\r\n\r\n  // 切换语言函数\r\n  const changeLanguage = (language) => {\r\n    setCurrentLanguage(language);\r\n    localStorage.setItem('preferred-language', language);\r\n  };\r\n\r\n  // 获取翻译的便捷函数\r\n  const t = (key) => getTranslation(key, currentLanguage);\r\n\r\n  // 获取支持的语言列表\r\n  const getSupportedLanguages = () => [\r\n    { code: 'zh', name: '中文', flag: '🇨🇳' },\r\n    { code: 'en', name: 'English', flag: '🇺🇸' },\r\n    { code: 'ja', name: '日本語', flag: '🇯🇵' }\r\n  ];\r\n\r\n  const value = {\r\n    currentLanguage,\r\n    changeLanguage,\r\n    t,\r\n    getSupportedLanguages\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider value={value}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n\r\n// 使用语言上下文的Hook\r\nexport const useLanguage = () => {\r\n  const context = useContext(LanguageContext);\r\n  if (!context) {\r\n    throw new Error('useLanguage must be used within a LanguageProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default LanguageContext; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,cAAc,QAAQ,uBAAuB;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;;AAEvC;AACA,OAAO,MAAMO,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAE5D;EACA,MAAMU,cAAc,GAAIC,QAAQ,IAAK;IACnCF,kBAAkB,CAACE,QAAQ,CAAC;IAC5BC,YAAY,CAACC,OAAO,CAAC,oBAAoB,EAAEF,QAAQ,CAAC;EACtD,CAAC;;EAED;EACA,MAAMG,CAAC,GAAIC,GAAG,IAAKd,cAAc,CAACc,GAAG,EAAEP,eAAe,CAAC;;EAEvD;EACA,MAAMQ,qBAAqB,GAAGA,CAAA,KAAM,CAClC;IAAEC,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAO,CAAC,EACxC;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAO,CAAC,EAC7C;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAO,CAAC,CAC1C;EAED,MAAMC,KAAK,GAAG;IACZZ,eAAe;IACfE,cAAc;IACdI,CAAC;IACDE;EACF,CAAC;EAED,oBACEb,OAAA,CAACC,eAAe,CAACiB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAd,QAAA,EACpCA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;;AAED;AAAAlB,EAAA,CAjCaF,gBAAgB;AAAAqB,EAAA,GAAhBrB,gBAAgB;AAkC7B,OAAO,MAAMsB,WAAW,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC/B,MAAMC,OAAO,GAAG9B,UAAU,CAACK,eAAe,CAAC;EAC3C,IAAI,CAACyB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,WAAW;AAQxB,eAAevB,eAAe;AAAC,IAAAsB,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}